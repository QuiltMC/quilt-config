plugins {
    id 'java'
    id 'maven-publish'
    id "com.diffplug.spotless" version "5.8.2"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group 'org.quiltmc'
version '1.0.0-beta.6'

java {
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven {
        name = 'Quilt'
        url = 'https://maven.quiltmc.org/repository/release'
    }
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_bom}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit_bom}"
    testImplementation "com.electronwill.night-config:core:${project.night_config}"
    testImplementation "com.electronwill.night-config:toml:${project.night_config}"
    testImplementation "org.quiltmc:quilt-json5:${project.quilt_json5}"

    implementation "org.jetbrains:annotations:${project.annotations}"
}

test {
    useJUnitPlatform()
}

jar {
    from ('.') {
        include 'LICENSE'
    }
}

spotless {
    java {
        // Use comma separator for openjdk like license headers
        licenseHeaderFile(file("codeformat/HEADER")).yearSeparator(", ")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // TODO: We should probably put this on central
    repositories {
        def ENV = System.getenv()

        if (ENV.MAVEN_URL) {
            project.logger.info("Publishing to " + ENV.MAVEN_URL)

            repositories.maven {
                url = ENV.MAVEN_URL

                credentials {
                    username = ENV.MAVEN_USERNAME
                    password = ENV.MAVEN_PASSWORD
                }
            }
        } else {
            project.logger.info("No Maven destination configured.")
        }
    }
}